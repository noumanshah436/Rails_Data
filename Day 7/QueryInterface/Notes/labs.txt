ID   | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL    | COMM   | DEPTNO | CREATED_AT              | UPDATED_AT
-----|-------|--------|-----------|------|------------|--------|--------|--------|-------------------------|------------------------
7369 | 7369  | SMITH  | CLERK     | 7902 | 1980-12-17 | 800.0  |        | 20     | 2023-01-04 10:05:42     | 2023-01-04 10:05:42
7499 | 7499  | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.0 | 300.0  | 30     | 2023-01-04 10:40:10     | 2023-01-04 10:40:10
7521 | 7521  | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.0 | 500.0  | 30     | 2023-01-04 10:05:42     | 2023-01-04 10:05:42
7566 | 7566  | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.0 |        | 20     | 2023-01-04 10:05:41     | 2023-01-04 10:05:41
7654 | 7654  | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.0 | 1400.0 | 30     | 2023-01-04 10:19:44     | 2023-01-04 10:19:44
7698 | 7698  | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.0 |        | 30     | 2023-01-04 10:22:45     | 2023-01-04 10:22:45
7782 | 7782  | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.0 |        | 10     | 2023-01-04 10:23:00     | 2023-01-04 10:23:00
7788 | 7788  | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.0 |        | 20     | 2023-01-04 10:23:01     | 2023-01-04 10:23:01
7839 | 7839  | KING   | PRESIDENT |      | 1981-11-17 | 5000.0 |        | 10     | 2023-01-04 10:23:37     | 2023-01-04 10:23:37
7844 | 7844  | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.0 | 0.0    | 30     | 2023-01-04 10:23:37     | 2023-01-04 10:23:37
7876 | 7876  | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1100.0 |        | 20     | 2023-01-04 10:24:05     | 2023-01-04 10:24:05
7900 | 7900  | JAMES  | CLERK     | 7698 | 1981-12-03 | 950.0  |        | 30     | 2023-01-04 10:24:05     | 2023-01-04 10:24:05
7902 | 7902  | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.0 |        | 20     | 2023-01-04 10:24:06     | 2023-01-04 10:24:06
7934 | 7934  | MILLER | CLERK     | 7782 | 1982-01-23 |        |        | 50     | 2023-01-04 10:27:21     | 2023-01-04 10:27:21


======================================================================================================
Lab 1
======================================================================================================


2. List the employees where JOB is CLERK and Salary is greater than 1000
select * from emp
where job='CLERK' and sal>1000


Emp.where("ename = ? and sal > ?",'CLARK' ,1000)



**********

3. List the employee’s employee id and salary.
select empno,sal from emp

Emp.select(:empno, :sal)

**************
4. List the name and hiredate of employees of department 10.
select ename,hiredate from emp
where deptno = 10

Emp.select(:ename, :hiredate).where("deptno = 10")
or
Emp.where("deptno = 10").select(:ename, :hiredate)

*******************
5. List the name and salary of the whole year and name that as Annual Salary.
select ename,sal*12 as "Annual Salery" from emp

*******************

    6. Show the employee who has 1600 salary.
select * from emp
where sal=1600

Emp.where(sal: 1600)
Emp.where(sal=1600)
*******************

15. Show employee id, name and total salary=sal+comm. (NOTE: column name should be “Total Salary”).
select empno,ename, sal+nvl(comm,0) as "Total Salery" from emp


======================================================================================================
Lab 2
======================================================================================================


2. List all employees who do NOT work in department number 10, 20.
Solution
select * from emp
where deptno not in(10,20)

tp Emp.where.not(deptno:[10,20])

*******************

3. List all employees having first letter in their name 'W' OR 'K’ and they do NOT belong to department number 10 OR 20.

select * from emp where (ename like 'W%' OR ename like 'K%') and (deptno not in (10,20))


Emp.where("(ename like 'W%' OR ename like 'K%') and (deptno not in (10,20))")

*******************

4.    List those employees whose name’s third last letter is ‘I’

 tp Emp.where("ename like '%I__'")


*******************

5. List those employees having first letter in their name 'F’ and the name contains exactly 4 letters.

tp Emp.where("ename like 'F___'")

tp Emp.where("ename like 'F%' and length(ename)= 4")


*******************

6.    List those employees whose names starts with ‘S’ and end with ‘H’

 tp Emp.where("ename like 'S%H'")


*******************

7.   Find those employees whose MGR IS 7902, 7566, 7788

 tp Emp.where(mgr: [7902, 7566, 7788])



*******************

8.   List all employees who are NOT manager.

 tp Emp.where.not(job: 'MANAGER')

 tp Emp.where("job <> 'MANAGER'")


*******************

9.   List all employees who are NOT PRESIDENT, ANALYST OR SALESMAN

 tp Emp.where.not(job: ['PRESIDENT', 'ANALYST' , 'SALESMAN'])



*******************

10.  List all employees with the name that have "LL" in any position



*******************

11.  Find those employees whose salary is 1600,2975,2850



*******************

12.  List those employees having salary between 1000 and 3000 and with no   commission

Emp.where(sal: 1000..3000 , comm:nil)

Emp.where("comm is null and (sal between 1000 and 3000)")

where comm is null and (sal between 1000 and 3000)


*******************

13. List those employees having salary between 1000 and 2000 and their manager is 7788



*******************

14. List those employees where job is CLERK and deptno is 10 OR 30



*******************

15. Find the annual salary of the employees and sort it in descending order



*******************

16. List all the employees sorted descending by the job and ascending by the salary



*******************

17. List all distinct jobs from the emp table



*******************

18. List the employees who have no manager



*******************

19. List the distinct managers

select distinct mgr from emp

Emp.select(:mgr).distinct


*******************

20. List all employees by sorting the hiredate in ascending order

select * from emp order by hiredate asc

Note: remove default scope in there is any.

Emp.order(hiredate: :asc)






======================================================================================================
Lab 4   ( group by query)
======================================================================================================



1. Your task is to find total salary Clark has used.
select ename,sum(sal) from emp
where ename='CLARK'
group by ename

Emp.group(:sal).sum


Emp.select("date(created_at) as ordered_date, sum(sal) as total_sal").group("date(created_at)")

Emp.select("ename , sum(sal)").group(:sal)


*******************

Group by: ( basic understanding )

https://riptutorial.com/ruby-on-rails/example/11651/-group-and--count
https://www.bootrails.com/blog/ruby-group-by-or-rails-group-by/


Emp.group(:job)
SELECT "emps".* FROM "emps" GROUP BY "emps"."job"

ID   | EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL    | COMM  | DEPTNO | CREATED_AT              | UPDATED_AT
-----|-------|-------|-----------|------|------------|--------|-------|--------|-------------------------|------------------------
7788 | 7788  | SCOTT | ANALYST   | 7566 | 1982-12-09 | 3000.0 |       | 20     | 2023-01-04 10:23:01     | 2023-01-04 10:23:01
7369 | 7369  | SMITH | CLERK     | 7902 | 1980-12-17 | 800.0  |       | 20     | 2023-01-04 10:05:42     | 2023-01-04 10:05:42
7566 | 7566  | JONES | MANAGER   | 7839 | 1981-04-02 | 2975.0 |       | 20     | 2023-01-04 10:05:41     | 2023-01-04 10:05:41
7839 | 7839  | KING  | PRESIDENT |      | 1981-11-17 | 5000.0 |       | 10     | 2023-01-04 10:23:37     | 2023-01-04 10:23:37
7521 | 7521  | WARD  | SALESMAN  | 7698 | 1981-02-22 | 1250.0 | 500.0 | 30     | 2023-01-04 10:05:42     | 2023-01-04 10:05:42

********************

Emp.group(:job).count
SELECT COUNT(*) AS count_all, "emps"."job" AS emps_job FROM "emps" GROUP BY "emps"."job"
 => {"ANALYST"=>2, "CLERK"=>4, "MANAGER"=>3, "PRESIDENT"=>1, "SALESMAN"=>4}


********************

Emp.sum(:sal)
SELECT SUM("emps"."sal") FROM "emps"

output:
0.27725e5

Note:use to_i method to convert into integer

********************
Emp.group(:job).sum(:sal)

SELECT SUM("emps"."sal") AS sum_sal, "emps"."job" AS emps_job FROM "emps" GROUP BY "emps"."job"

=> {"ANALYST"=>0.6e4, "CLERK"=>0.285e4, "MANAGER"=>0.8275e4, "PRESIDENT"=>0.5e4, "SALESMAN"=>0.56e4}


********************

Emp.select(:job, :ename).group(:job).sum(:sal)
SELECT SUM("emps"."sal") AS sum_sal, "emps"."job" AS emps_job FROM "emps" GROUP BY "emps"."job"

 => {"ANALYST"=>0.6e4, "CLERK"=>0.285e4, "MANAGER"=>0.8275e4, "PRESIDENT"=>0.5e4, "SALESMAN"=>0.56e4}

********************

2) Emp.where(ename:'CLARK').group(:job).sum(:sal)

SELECT SUM("emps"."sal") AS sum_sal, "emps"."job" AS emps_job FROM "emps" WHERE "emps"."ename" = ? GROUP BY "emps"."job"  [["ename", "CLARK"]]

 => {"MANAGER"=>0.245e4}

********************

Emp.where(ename:'CLARK').group(:job, :ename).sum(:sal)

SELECT SUM("emps"."sal") AS sum_sal, "emps"."job" AS emps_job, "emps"."ename" AS emps_ename FROM "emps" WHERE "emps"."ename" = ? GROUP BY "emps"."job", "emps"."ename"  [["ename", "CLARK"]]

=> {["MANAGER", "CLARK"]=>0.245e4}

********************
3.   Find the sum of salary of employees of Dept no 20.
  select deptno,sum(sal) from emp
  where deptno=20
  group by deptno

Emp.where(deptno:20).group(:deptno).sum(:sal)

SELECT SUM("emps"."sal") AS sum_sal, "emps"."deptno" AS emps_deptno FROM "emps" WHERE "emps"."deptno" = ? GROUP BY "emps"."deptno"  [["deptno", 20]]

=> {20=>0.10875e5}

**************************

5. Get the salary of all clerks.

select job, sum(sal) from emp
where job='CLERK'
group by job

Emp.where(job: 'CLERK').group(:job).sum(:sal)

SELECT SUM("emps"."sal") AS sum_sal, "emps"."job" AS emps_job FROM "emps" WHERE "emps"."job" = ? GROUP BY "emps"."job"  [["job", "CLERK"]]

{"CLERK"=>0.285e4}

**************************

6  Show all clerks of deptno. 30.

select ename from emp
where deptno=30 and job='CLERK'
group by ename

Emp.where(job: 'CLERK', deptno:30)

**************************

7. Get average salary of all departments.

select deptno, avg(sal) from emp
group by deptno

Emp.group(:deptno).average(:sal)

 => {10=>0.3725e4, 20=>0.2175e4, 30=>0.156666666666667e4, 50=>nil}

**************************
9. Get the name and salary of the employee who has been highly paid.
SELECT ename ,sal FROM emp
where sal in(select max(sal) from emp)


Emp.select(:ename, :sal).maximum(:sal)

**************************
14. Get the average salary of all the Analysts.
SELECT job, avg(sal) FROM emp
where job='ANALYST'
GROUP BY job

Emp.where(job: 'ANALYST').group(:job).average(:sal)

SELECT AVG("emps"."sal") AS average_sal, "emps"."job" AS emps_job FROM "emps" WHERE "emps"."job" = ? GROUP BY "emps"."job"  [["job", "ANALYST"]]

=> {"ANALYST"=>0.3e4}


**************************

15. Get the average commission of dept no. 20 and 30.
SELECT deptno, avg(comm) FROM emp
where deptno in(20,30)
GROUP BY deptno

Emp.where(deptno: [20,30]).group(:deptno).average(:comm)

SELECT AVG("emps"."comm") AS average_comm, "emps"."deptno" AS emps_deptno FROM "emps" WHERE "emps"."deptno" IN (?, ?) GROUP BY "emps"."deptno"  [["deptno", 20], ["deptno", 30]]

 => {20=>nil, 30=>0.55e3}

**************************

16. Show the sum of one year salary of all Analysts.

SELECT job, sum(sal)*12 FROM emp
where job='ANALYST'
GROUP BY job

a = Emp.where(job: 'ANALYST').group(:job).sum(:sal)

SELECT SUM("emps"."sal") AS sum_sal, "emps"."job" AS emps_job FROM "emps" WHERE "emps"."job" = ? GROUP BY "emps"."job"  [["job", "ANALYST"]]

a['ANALYST']
 => 0.6e4

 a['ANALYST']*12
 => 0.72e5

72000

**************************
17. Get the average salary of all departments but you must include salaries greater than 2800.
SELECT deptno, avg(sal) FROM emp
where sal>2800
GROUP BY deptno

Emp.where('sal>2800').group(:deptno).average(:sal)

SELECT AVG("emps"."sal") AS average_sal, "emps"."deptno" AS emps_deptno FROM "emps" WHERE (sal>2800) GROUP BY "emps"."deptno"

=> {10=>0.5e4, 20=>0.299166666666667e4, 30=>0.285e4}

**************************

18. Show total no. of jobs in each department.
SELECT deptno, count(distinct job) FROM emp
GROUP BY deptno

Emp.group(:deptno).distinct.count(:job)
SELECT COUNT(DISTINCT "emps"."job") AS count_job, "emps"."deptno" AS emps_deptno FROM "emps" GROUP BY "emps"."deptno"

or

Emp.group(:deptno).count("distinct job")
SELECT COUNT(distinct job) AS count_distinct_job, "emps"."deptno" AS emps_deptno FROM "emps" GROUP BY "emps"."deptno"

{10=>2, 20=>3, 30=>3, 50=>1}

**************************

20. Get the average salary of Analysts like 9999$

SELECT job, concat(TO_CHAR (avg(sal), '99999'),'$') as output FROM emp
where job='ANALYST'
GROUP BY job

Emp.where(job:'ANALYST').group(:job).average(:sal)

SELECT AVG("emps"."sal") AS average_sal, "emps"."job" AS emps_job FROM "emps" WHERE "emps"."job" = ? GROUP BY "emps"."job"  [["job", "ANALYST"]]

 => {"ANALYST"=>0.3e4}



======================================================================================================
Lab 5   ( joins query)
======================================================================================================
